{"version":3,"file":"static/js/673.6e85fff1.chunk.js","mappings":"6OAGaA,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAERC,EAAAA,EAAAA,IAAU,wEAADC,OCLb,qCDOjB,KAAD,EAFa,OAARL,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SAGPP,GAAQ,OAE8B,MAF9BC,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEfQ,QAAQC,MAAM,uBAAsBT,EAAAO,IAASP,EAAAO,GAAA,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAGhD,kBAV+B,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,K,SEgChC,EA/Ba,WACX,IAAAC,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAgBtC,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAzB,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAuB,EAAA,OAAAxB,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKR,IAAsB,KAAD,EAApC2B,EAAMrB,EAAAK,KACZa,EAAiBG,EAAOC,KAAKC,SAC7Bf,QAAQgB,IAAI,UAAWH,GAAQrB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE/BQ,QAAQC,MAAM,uBAAsBT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAEhD,kBARgB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KASjBQ,GACF,GAAG,KAGDK,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGT,EAAcW,KAAI,SAAAC,GAAK,OACtBF,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAoBG,EAAMC,OAASD,EAAME,MAAhCF,EAAMG,KADRH,EAAMG,GAEV,QAKf,C","sources":["components/TrendingMoviesFetch.js","components/Api.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_KEY } from './Api';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?language=en-US&api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\n","export const API_KEY = '3e82467d5ce14883b35275ee23bc002f';\n","import { useEffect, useState } from 'react';\n// import { Link, useLocation } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'components/TrendingMoviesFetch';\n\nconst Home = () => {\n  const [fetchedMovies, setFetchedMovies] = useState([]);\n  // const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const movies = await fetchTrendingMovies();\n        setFetchedMovies(movies.data.results);\n        console.log('Movies:', movies);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending Movies Today</h1>\n      <ul>\n        {fetchedMovies.map(movie => (\n          <li key={movie.id}>\n            <li key={movie.id}>{movie.title || movie.name}</li>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","t0","console","error","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","fetchedMovies","setFetchedMovies","useEffect","fetchMovies","movies","data","results","log","_jsxs","children","_jsx","map","movie","title","name","id"],"sourceRoot":""}