{"version":3,"file":"static/js/370.2fbaa823.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.jsx","utilities/MoviesByQueryFetch.js","pages/Movies/Movies.jsx","utilities/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchBox = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const queryParam = searchParams.get('query');\n    setSearchQuery(queryParam || '');\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n    setSearchQuery('');\n  };\n\n  const handleInputChange = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={searchQuery} onChange={handleInputChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n","import axios from 'axios';\nimport { API_KEY } from './Api';\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\n","import { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMoviesByQuery } from '../../utilities/MoviesByQueryFetch';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      fetchMovies(query);\n    } else {\n      setMovies([]);\n    }\n  }, [query]);\n\n  const fetchMovies = async query => {\n    try {\n      const movies = await fetchMoviesByQuery(query);\n      setMovies(movies);\n      console.log('Movies:', movies);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n\n  return (\n    <main>\n      <SearchBox />\n      {query && <h2>Search Results:</h2>}\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>{movie.title || movie.name}</li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n","export const API_KEY = '3e82467d5ce14883b35275ee23bc002f';\n"],"names":["SearchBox","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","queryParam","get","_jsx","children","_jsxs","onSubmit","e","preventDefault","query","type","value","onChange","target","fetchMoviesByQuery","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","API_KEY","sent","abrupt","data","results","t0","console","error","stop","_x","apply","arguments","movies","setMovies","fetchMovies","_movies","log","map","movie","title","name","id"],"sourceRoot":""}